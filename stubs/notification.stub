<?php

namespace {{ namespace }};

use App\Notifications\Notification;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Notifications\Messages;
use Illuminate\Notifications\Messages\MailMessage;

class {{ class }} extends Notification implements ShouldQueue
{
    use Queueable;

    public Model $model;

    /**
     * Create a new notification instance.
     *
     * @return void
     */
    public function __construct(Model $model): void
    {
        $this->model = $model;
    }

    /**
     * Get the mail representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return MailMessage
     */
    public function toMail($notifiable): MailMessage
    {
        $notification = $this->toArray($notifiable);

        return (new MailMessage)
                    ->subject($notification['title'])
                    ->line($notification['description'])
                    ->action($notification['accept']['label'] ?? '', $notification['accept']['url'] ?? '');
    }

    /**
     * Get the array representation of the notification.
     * The array should contain the folowing keys:
     * - title (string)
     * - description (string)
     * - icon (string, all heroicons)
     * - img (string, url to image)
     * - accept (array, contains the following keys)
     *     - label (string, required)
     *     - url (string, required)
     * - reject (array, contains the following keys)
     *     - label (string, required)
     *     - url (string, required)
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function toArray($notifiable): array
    {
        $locale = $notifiable?->language->language_code ?? config('app.locale');

        return [
            'title' => '',
            'description' => '',
            'icon' => 'info',
            'img' => '',
            'accept' => [
                'label' => '',
                'url' => '',
            ],
        ];
    }
}
